// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Do-to",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "paths": {
    "/goal/{section}": {
      "post": {
        "description": "Adds goal",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Goal"
        ],
        "summary": "post goal",
        "operationId": "goal-post",
        "parameters": [
          {
            "type": "array",
            "items": {
              "enum": [
                "productivity",
                "todo",
                "enhancement",
                "proficiency"
              ],
              "type": "string"
            },
            "name": "section",
            "in": "path",
            "required": true
          },
          {
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Goal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Goal"
              }
            }
          }
        }
      }
    },
    "/goals": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Goal"
        ],
        "summary": "multiple goals by section",
        "operationId": "goals-section-query",
        "parameters": [
          {
            "type": "array",
            "items": {
              "enum": [
                "productivity",
                "todo",
                "enhancement",
                "proficiency"
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "name": "sections",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Goal"
              }
            }
          }
        }
      }
    },
    "/goals/{section}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Goal"
        ],
        "summary": "goal by single section selected",
        "operationId": "goals-section",
        "parameters": [
          {
            "type": "array",
            "items": {
              "enum": [
                "productivity",
                "todo",
                "enhancement",
                "proficiency"
              ],
              "type": "string"
            },
            "name": "section",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Goal"
              }
            }
          }
        }
      }
    },
    "/task": {
      "post": {
        "description": "Adds task",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "post task",
        "operationId": "task-post",
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Direction": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "default",
            "unidirectional",
            "bidirectional"
          ]
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "Goal": {
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "relations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relationship"
          }
        },
        "section": {
          "$ref": "#/definitions/Goal_sections"
        },
        "tasks": {
          "$ref": "#/definitions/Task"
        },
        "timestamp": {
          "type": "string"
        }
      }
    },
    "Goal_sections": {
      "type": "string",
      "enum": [
        "productivity",
        "todo",
        "enhancement",
        "proficiency"
      ]
    },
    "Relationship": {
      "type": "object",
      "properties": {
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Direction"
          }
        },
        "props": {
          "type": "object",
          "additionalProperties": false
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Task": {
      "properties": {
        "description": {
          "type": "string"
        },
        "estimation": {
          "type": "string",
          "format": "full-date"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "relationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relationship"
          }
        },
        "section": {
          "$ref": "#/definitions/Goal_sections"
        },
        "subtask": {
          "$ref": "#/definitions/Task"
        },
        "timestamp": {
          "type": "string",
          "format": "full-date"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Do-to",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "paths": {
    "/goal/{section}": {
      "post": {
        "description": "Adds goal",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Goal"
        ],
        "summary": "post goal",
        "operationId": "goal-post",
        "parameters": [
          {
            "type": "array",
            "items": {
              "enum": [
                "productivity",
                "todo",
                "enhancement",
                "proficiency"
              ],
              "type": "string"
            },
            "name": "section",
            "in": "path",
            "required": true
          },
          {
            "name": "content",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Goal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Goal"
              }
            }
          }
        }
      }
    },
    "/goals": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Goal"
        ],
        "summary": "multiple goals by section",
        "operationId": "goals-section-query",
        "parameters": [
          {
            "type": "array",
            "items": {
              "enum": [
                "productivity",
                "todo",
                "enhancement",
                "proficiency"
              ],
              "type": "string"
            },
            "collectionFormat": "csv",
            "name": "sections",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Goal"
              }
            }
          }
        }
      }
    },
    "/goals/{section}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "Goal"
        ],
        "summary": "goal by single section selected",
        "operationId": "goals-section",
        "parameters": [
          {
            "type": "array",
            "items": {
              "enum": [
                "productivity",
                "todo",
                "enhancement",
                "proficiency"
              ],
              "type": "string"
            },
            "name": "section",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Goal"
              }
            }
          }
        }
      }
    },
    "/task": {
      "post": {
        "description": "Adds task",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Task"
        ],
        "summary": "post task",
        "operationId": "task-post",
        "parameters": [
          {
            "name": "task",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Task"
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Direction": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "default",
            "unidirectional",
            "bidirectional"
          ]
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      }
    },
    "Goal": {
      "properties": {
        "description": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "relations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relationship"
          }
        },
        "section": {
          "$ref": "#/definitions/Goal_sections"
        },
        "tasks": {
          "$ref": "#/definitions/Task"
        },
        "timestamp": {
          "type": "string"
        }
      }
    },
    "Goal_sections": {
      "type": "string",
      "enum": [
        "productivity",
        "todo",
        "enhancement",
        "proficiency"
      ]
    },
    "Relationship": {
      "type": "object",
      "properties": {
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Direction"
          }
        },
        "props": {
          "type": "object",
          "additionalProperties": false
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Task": {
      "properties": {
        "description": {
          "type": "string"
        },
        "estimation": {
          "type": "string",
          "format": "full-date"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "relationships": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Relationship"
          }
        },
        "section": {
          "$ref": "#/definitions/Goal_sections"
        },
        "subtask": {
          "$ref": "#/definitions/Task"
        },
        "timestamp": {
          "type": "string",
          "format": "full-date"
        }
      }
    }
  }
}`))
}
